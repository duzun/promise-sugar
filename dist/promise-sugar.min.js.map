{"version":3,"file":"promise-sugar.min.js","sources":["../promise-sugar.js"],"sourcesContent":["/**\n *  Promise syntactic sugar - no need to write \".then\"\n *\n *  @license MIT\n *  @version 2.0.1\n *  @git https://github.com/duzun/promise-sugar\n *  @umd AMD, Browser, CommonJs\n *  @author Dumitru Uzun (DUzun.Me)\n */\n\n/*globals globalThis, window, global, self */\n\nconst VERSION = '2.0.0';\n\n// -------------------------------------------------------------\nlet nativePromise = typeof Promise != 'undefined' ? Promise : (typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {}).Promise;\n// -------------------------------------------------------------\nvar isArray = Array.isArray || function isArray(val) {\n    return val instanceof Array;\n};\n// -------------------------------------------------------------\n\nexport default function sweeten(p) {\n    // new Promise(p) - [[Construct]]\n    if ( this instanceof sweeten ) {\n        return sweeten(new nativePromise(p));\n    }\n\n    // Make sure p is a thenable\n    if ( !isThenable(p) ) {\n        p = nativePromise.resolve(p);\n    }\n\n    then.then = then;\n\n    var PromisePrototype = nativePromise.prototype;\n\n    // then.__proto__ = PromisePrototype; // not sure this is a good idea\n\n    // an alternative to setting then.__proto__:\n    then.constructor = nativePromise;\n\n    // Promise/A+\n    then.catch   = _catch  ;\n\n    // Q\n    then.finally = _finally;\n\n    if ( 'progress' in PromisePrototype ) {\n        then.progress = PromisePrototype.progress;\n    }\n\n    return then;\n\n    function then(onResolve, onReject, onNotify) {\n        if ( isThenable(onResolve) ) {\n            onResolve = _constant(onResolve);\n        }\n        if ( isThenable(onReject) ) {\n            onReject = _constant(onReject);\n        }\n        return sweeten(p.then.apply(p, arguments));\n    }\n}\n\n// -------------------------------------------------------------\nfunction _catch(onReject) {\n    return this.then(undefined, onReject);\n}\n\n// -------------------------------------------------------------\nfunction _finally(callback) {\n    return this.then(\n        function(value) {\n            return resolver().then(function() { return value; });\n        },\n        function(reason) {\n            return resolver().then(function() { throw reason; });\n        }\n    );\n    function resolver() {\n        return sweeten.resolve(callback());\n    }\n}\n// -------------------------------------------------------------\nfunction _defer() {\n    var result = {};\n    result.promise = new nativePromise(function(resolve, reject, notify) {\n        result.resolve = resolve;\n        result.reject  = reject;\n\n        // Q\n        if ( notify ) {\n            result.notify = notify;\n        }\n    });\n    return result;\n}\n// -------------------------------------------------------------\n// Some more sugar:\nsweeten.resolve = function resolve(val) { return sweeten(nativePromise.resolve(val)); };\nsweeten.reject  = function  reject(val) { return sweeten(nativePromise.reject(val)); };\nsweeten.race    = function    race(val) { return sweeten(nativePromise.race(val)); };\nsweeten.all     = function     all(val) { return sweeten(nativePromise.all(val)); };\n\nsweeten.allValues = function allValues(val) {\n    if ( isArray(val) ) return sweeten.all(val);\n\n    var keys = Object.keys(val);\n    var len  = keys.length;\n    var values = new Array(len);\n    var isIndexed = val.length === len;\n    for ( var i=0, k; i<len; i++) {\n        k = keys[i];\n        if ( k != i ) isIndexed = false;\n        values[i] = val[k];\n    }\n    var prom = sweeten.all(values);\n    if ( !isIndexed ) {\n        prom = prom(function (values) {\n            var ret = {};\n            for ( var i=0; i<len; i++) {\n                ret[keys[i]] = values[i];\n            }\n            return ret;\n        });\n    }\n    return prom;\n};\n\nsweeten.when    = sweeten;\nsweeten.defer   = function defer() {\n    const defer = nativePromise.defer || _defer;\n    const deferred = defer.call(nativePromise);\n    deferred.promise = sweeten(deferred.promise);\n    return deferred;\n};\n\nsweeten.isThenable = isThenable;\n\n/**\n * Make an ordinary function sweet for promises.\n *\n * @param  {Function} fn A function that returns any value or Promise\n * @param  {Any} ctx Context of fn (this)\n *\n * @return {Function} equivalent of fn that always returns a sweeten Promise\n */\nsweeten.fn = function fn(fn, ctx) {\n    return arguments.length > 1\n        ? function () {\n            return sweeten.all(arguments)(function (a) { return fn.apply(ctx, a); });\n        }\n        : function () {\n            var ctx = this;\n            return sweeten.all(arguments)(function (a) { return fn.apply(ctx, a); });\n        }\n    ;\n};\n\n// -------------------------------------------------------------\n/// Use a custom Promise implementation\nfunction usePromise(PromiseConstructor) {\n    nativePromise = PromiseConstructor;\n}\n\n// -------------------------------------------------------------\nsweeten.usePromise = usePromise;\nsweeten.VERSION    = VERSION;\n\n// -------------------------------------------------------------\n// Helpers:\n// -------------------------------------------------------------\nfunction isThenable(p) {\n    return p && typeof p.then === 'function';\n}\n\nfunction _constant(val) {\n    return () => val;\n}\n"],"names":["nativePromise","Promise","globalThis","window","global","self","isArray","Array","val","sweeten","p","this","isThenable","resolve","then","PromisePrototype","prototype","constructor","_catch","_finally","progress","onResolve","onReject","onNotify","_constant","apply","arguments","undefined","callback","value","resolver","reason","_defer","result","promise","reject","notify","race","all","allValues","k","keys","Object","len","length","values","isIndexed","i","prom","ret","when","defer","deferred","call","fn","ctx","a","usePromise","PromiseConstructor","VERSION"],"mappings":";;;;;;;;;OAYA,IAGIA,EAAkC,oBAAXC,QAAyBA,SAAiC,oBAAfC,WAA6BA,WAA+B,oBAAXC,OAAyBA,OAA2B,oBAAXC,OAAyBA,OAAyB,oBAATC,KAAuBA,KAAO,IAAIJ,QAEvOK,EAAUC,MAAMD,SAAW,SAAiBE,UACrCA,aAAeD,OAIX,SAASE,EAAQC,MAEvBC,gBAAgBF,SACVA,EAAQ,IAAIT,EAAcU,IAI/BE,EAAWF,KACbA,EAAIV,EAAca,QAAQH,IAG9BI,EAAKA,KAAOA,MAERC,EAAmBf,EAAcgB,iBAKrCF,EAAKG,YAAcjB,EAGnBc,QAAeI,EAGfJ,UAAeK,EAEV,aAAcJ,IACfD,EAAKM,SAAWL,EAAiBK,UAG9BN,WAEEA,EAAKO,EAAWC,EAAUC,UAC1BX,EAAWS,KACZA,EAAYG,EAAUH,IAErBT,EAAWU,KACZA,EAAWE,EAAUF,IAElBb,EAAQC,EAAEI,KAAKW,MAAMf,EAAGgB,aAKvC,SAASR,EAAOI,UACLX,KAAKG,UAAKa,EAAWL,GAIhC,SAASH,EAASS,UACPjB,KAAKG,MACR,SAASe,UACEC,IAAWhB,MAAK,kBAAoBe,QAE/C,SAASE,UACED,IAAWhB,MAAK,iBAAmBiB,iBAGzCD,WACErB,EAAQI,QAAQe,MAI/B,SAASI,QACDC,EAAS,UACbA,EAAOC,QAAU,IAAIlC,GAAc,SAASa,EAASsB,EAAQC,GACzDH,EAAOpB,QAAUA,EACjBoB,EAAOE,OAAUA,EAGZC,IACDH,EAAOG,OAASA,MAGjBH,EA6EX,SAASrB,EAAWF,UACTA,GAAuB,mBAAXA,EAAEI,KAGzB,SAASU,EAAUhB,UACR,kBAAMA,UA9EjBC,EAAQI,QAAU,SAAiBL,UAAcC,EAAQT,EAAca,QAAQL,KAC/EC,EAAQ0B,OAAU,SAAiB3B,UAAcC,EAAQT,EAAcmC,OAAO3B,KAC9EC,EAAQ4B,KAAU,SAAiB7B,UAAcC,EAAQT,EAAcqC,KAAK7B,KAC5EC,EAAQ6B,IAAU,SAAiB9B,UAAcC,EAAQT,EAAcsC,IAAI9B,KAE3EC,EAAQ8B,UAAY,SAAmB/B,MAC9BF,EAAQE,GAAO,OAAOC,EAAQ6B,IAAI9B,WAMxBgC,EAJXC,EAAOC,OAAOD,KAAKjC,GACnBmC,EAAOF,EAAKG,OACZC,EAAS,IAAItC,MAAMoC,GACnBG,EAAYtC,EAAIoC,SAAWD,EACrBI,EAAE,EAAMA,EAAEJ,EAAKI,KACrBP,EAAIC,EAAKM,KACCA,IAAID,GAAY,GAC1BD,EAAOE,GAAKvC,EAAIgC,OAEhBQ,EAAOvC,EAAQ6B,IAAIO,UACjBC,IACFE,EAAOA,GAAK,SAAUH,WACdI,EAAM,GACAF,EAAE,EAAGA,EAAEJ,EAAKI,IAClBE,EAAIR,EAAKM,IAAMF,EAAOE,UAEnBE,MAGRD,GAGXvC,EAAQyC,KAAUzC,EAClBA,EAAQ0C,MAAU,eACRA,EAAQnD,EAAcmD,OAASnB,EAC/BoB,EAAWD,EAAME,KAAKrD,UAC5BoD,EAASlB,QAAUzB,EAAQ2C,EAASlB,SAC7BkB,GAGX3C,EAAQG,WAAaA,EAUrBH,EAAQ6C,GAAK,SAAYA,EAAIC,UAClB7B,UAAUkB,OAAS,EACpB,kBACSnC,EAAQ6B,IAAIZ,UAAZjB,EAAuB,SAAU+C,UAAYF,EAAG7B,MAAM8B,EAAKC,OAEpE,eACMD,EAAM5C,YACHF,EAAQ6B,IAAIZ,UAAZjB,EAAuB,SAAU+C,UAAYF,EAAG7B,MAAM8B,EAAKC,QAY9E/C,EAAQgD,WALR,SAAoBC,GAChB1D,EAAgB0D,GAKpBjD,EAAQkD,QA5JQ"}